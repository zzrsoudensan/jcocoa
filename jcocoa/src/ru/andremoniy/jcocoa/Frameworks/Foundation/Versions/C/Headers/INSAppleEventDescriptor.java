package ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers;

import ru.andremoniy.jcocoa.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSData;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSData.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSData;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSData.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSAppleEventDescriptor.*;

public abstract class INSAppleEventDescriptor extends NSObject {

	protected AEDesc _desc;
	protected Boolean _hasValidDesc;
	protected char _padding;

	public NSObject initWithDescriptorType(DescType descriptorType, void bytes, Integer byteCount) { return null;
};
	public NSObject initWithDescriptorType(DescType descriptorType, NSData data) { return null;
};
	public NSObject initWithEventClass(AEEventClass eventClass, AEEventID eventID, NSAppleEventDescriptor targetDescriptor, AEReturnID returnID, AETransactionID transactionID) { return null;
};
	public NSObject initListDescriptor() { return null;
};
	public NSObject initRecordDescriptor() { return null;
};
	public DescType descriptorType() { return null;
};
	public NSData data() { return null;
};
	public AEEventClass eventClass() { return null;
};
	public AEEventID eventID() { return null;
};
	public AEReturnID returnID() { return null;
};
	public AETransactionID transactionID() { return null;
};
	public void setParamDescriptor(NSAppleEventDescriptor descriptor, AEKeyword keyword) { return ;
};
	public NSAppleEventDescriptor paramDescriptorForKeyword(AEKeyword keyword) { return null;
};
	public void removeParamDescriptorWithKeyword(AEKeyword keyword) { return ;
};
	public void setAttributeDescriptor(NSAppleEventDescriptor descriptor, AEKeyword keyword) { return ;
};
	public NSAppleEventDescriptor attributeDescriptorForKeyword(AEKeyword keyword) { return null;
};
	public Integer numberOfItems() { return null;
};
	public void insertDescriptor(NSAppleEventDescriptor descriptor, Integer index) { return ;
};
	public NSAppleEventDescriptor descriptorAtIndex(Integer index) { return null;
};
	public void removeDecriptorAtIndex(Integer index) { return ;
};
	public void setDescriptor(NSAppleEventDescriptor descriptor, AEKeyword keyword) { return ;
};
	public NSAppleEventDescriptor descriptorForKeyword(AEKeyword keyword) { return null;
};
	public void removeDescriptorWithKeyword(AEKeyword keyword) { return ;
};
	public AEKeyword keywordForDescriptorAtIndex(Integer index) { return null;
};
	public NSAppleEventDescriptor coerceToDescriptorType(DescType descriptorType) { return null;
};
}
