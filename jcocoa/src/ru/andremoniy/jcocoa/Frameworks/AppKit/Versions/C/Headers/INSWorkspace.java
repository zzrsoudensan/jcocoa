package ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers;

import ru.andremoniy.jcocoa.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSImage;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSImage.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSImage;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSImage.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSKeyValueCoding.INSArray;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSKeyValueCoding.INSArray.*;
import ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSPathUtilities.INSArray;
import static ru.andremoniy.jcocoa.Frameworks.Foundation.Versions.C.Headers.INSPathUtilities.INSArray.*;

public abstract class INSWorkspace {
	public Boolean openTempFile(String fullPath) { return null;
};
	public void findApplications() { return ;
};
	public void noteUserDefaultsChanged() { return ;
};
	public void slideImage(NSImage image, NSPoint fromPoint, NSPoint toPoint) { return ;
};
	public void checkForRemovableMedia() { return ;
};
	public void noteFileSystemChanged() { return ;
};
	public Boolean fileSystemChanged() { return null;
};
	public Boolean userDefaultsChanged() { return null;
};
	public NSArray mountNewRemovableMedia() { return null;
};
	public static String NSWorkspaceDesktopImageScalingKey;
	public static String NSWorkspaceDesktopImageAllowClippingKey;
	public static String NSWorkspaceDesktopImageFillColorKey;
	public static String NSWorkspaceApplicationKey;
	public static String NSWorkspaceWillLaunchApplicationNotification;
	public static String NSWorkspaceDidLaunchApplicationNotification;
	public static String NSWorkspaceDidTerminateApplicationNotification;
	public static String NSWorkspaceDidHideApplicationNotification;
	public static String NSWorkspaceDidUnhideApplicationNotification;
	public static String NSWorkspaceDidActivateApplicationNotification;
	public static String NSWorkspaceDidDeactivateApplicationNotification;
	public static String NSWorkspaceVolumeLocalizedNameKey;
	public static String NSWorkspaceVolumeURLKey;
	public static String NSWorkspaceVolumeOldLocalizedNameKey;
	public static String NSWorkspaceVolumeOldURLKey;
	public static String NSWorkspaceDidMountNotification;
	public static String NSWorkspaceDidUnmountNotification;
	public static String NSWorkspaceWillUnmountNotification;
	public static String NSWorkspaceDidRenameVolumeNotification;
	public static String NSWorkspaceWillPowerOffNotification;
	public static String NSWorkspaceWillSleepNotification;
	public static String NSWorkspaceDidWakeNotification;
	public static String NSWorkspaceScreensDidSleepNotification;
	public static String NSWorkspaceScreensDidWakeNotification;
	public static String NSWorkspaceSessionDidBecomeActiveNotification;
	public static String NSWorkspaceSessionDidResignActiveNotification;
	public static String NSWorkspaceDidPerformFileOperationNotification;
	public static String NSWorkspaceDidChangeFileLabelsNotification;
	public static String NSWorkspaceActiveSpaceDidChangeNotification;
	public static String NSWorkspaceLaunchConfigurationAppleEvent;
	public static String NSWorkspaceLaunchConfigurationArguments;
	public static String NSWorkspaceLaunchConfigurationEnvironment;
	public static String NSWorkspaceLaunchConfigurationArchitecture;
	public static String NSWorkspaceMoveOperation;
	public static String NSWorkspaceCopyOperation;
	public static String NSWorkspaceLinkOperation;
	public static String NSWorkspaceCompressOperation;
	public static String NSWorkspaceDecompressOperation;
	public static String NSWorkspaceEncryptOperation;
	public static String NSWorkspaceDecryptOperation;
	public static String NSWorkspaceDestroyOperation;
	public static String NSWorkspaceRecycleOperation;
	public static String NSWorkspaceDuplicateOperation;
	public static String NSPlainFileType;
	public static String NSDirectoryFileType;
	public static String NSApplicationFileType;
	public static String NSFilesystemFileType;
	public static String NSShellCommandFileType;
}
