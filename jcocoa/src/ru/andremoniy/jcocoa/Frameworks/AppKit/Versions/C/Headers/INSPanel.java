package ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers;

import ru.andremoniy.jcocoa.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSWindowScripting.INSWindow.*;
import ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow;
import static ru.andremoniy.jcocoa.Frameworks.AppKit.Versions.C.Headers.INSDrawer.INSWindow.*;

public abstract class INSPanel extends NSWindow {
	public Boolean isFloatingPanel() { return null;
};
	public void setFloatingPanel(Boolean flag) { return ;
};
	public Boolean becomesKeyOnlyIfNeeded() { return null;
};
	public void setBecomesKeyOnlyIfNeeded(Boolean flag) { return ;
};
	public Boolean worksWhenModal() { return null;
};
	public void setWorksWhenModal(Boolean flag) { return ;
};
	public static String NSRunAlertPanel;
	public static String NSRunInformationalAlertPanel;
	public static String NSRunCriticalAlertPanel;
	public static NSWindow NSRunAlertPanelRelativeToWindow;
	public static NSWindow NSRunInformationalAlertPanelRelativeToWindow;
	public static NSWindow NSRunCriticalAlertPanelRelativeToWindow;
	public static String NSBeginAlertSheet;
	public static String NSBeginInformationalAlertSheet;
	public static String NSBeginCriticalAlertSheet;
	public static String NSGetAlertPanel;
	public static String NSGetInformationalAlertPanel;
	public static String NSGetCriticalAlertPanel;
	public static NSObject NSReleaseAlertPanel;
public static Integer NSAlertDefaultReturn = 1;
public static Integer NSAlertAlternateReturn = 0;
public static Integer NSAlertOtherReturn = -1;
public static Integer NSAlertErrorReturn = -2;
public static Integer NSOKButton = 1;
public static Integer NSCancelButton = 0;
public static Integer NSUtilityWindowMask = 1;
public static Integer NSDocModalWindowMask = 1;
}
