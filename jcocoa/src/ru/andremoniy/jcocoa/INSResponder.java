package ru.andremoniy.cocoa;

import ru.andremoniy.cocoa.*;
import ns.NSResponder;
import static ns.NSResponder.*;
import ns.INSResponder;
import static ns.INSResponder.*;
import ns.NSEvent;
import static ns.NSEvent.*;
import ns.INSEvent;
import static ns.INSEvent.*;
import ns.NSArray;
import static ns.NSArray.*;
import ns.INSArray;
import static ns.INSArray.*;
import ns.NSMenu;
import static ns.NSMenu.*;
import ns.INSMenu;
import static ns.INSMenu.*;
import ns.NSUndoManager;
import static ns.NSUndoManager.*;
import ns.INSUndoManager;
import static ns.INSUndoManager.*;

import ns.NSObject;

public abstract class INSResponder extends NSObject {

	protected NSObject _nextResponder;

	public NSResponder nextResponder() { return null;
};
	public void setNextResponder(NSResponder aResponder) { return ;
};
	public Boolean tryToPerform(SEL anAction, NSObject anObject) { return null;
};
	public Boolean performKeyEquivalent(NSEvent theEvent) { return null;
};
	public NSObject validRequestorForSendType(String sendType, String returnType) { return null;
};
	public void mouseDown(NSEvent theEvent) { return ;
};
	public void rightMouseDown(NSEvent theEvent) { return ;
};
	public void otherMouseDown(NSEvent theEvent) { return ;
};
	public void mouseUp(NSEvent theEvent) { return ;
};
	public void rightMouseUp(NSEvent theEvent) { return ;
};
	public void otherMouseUp(NSEvent theEvent) { return ;
};
	public void mouseMoved(NSEvent theEvent) { return ;
};
	public void mouseDragged(NSEvent theEvent) { return ;
};
	public void scrollWheel(NSEvent theEvent) { return ;
};
	public void rightMouseDragged(NSEvent theEvent) { return ;
};
	public void otherMouseDragged(NSEvent theEvent) { return ;
};
	public void mouseEntered(NSEvent theEvent) { return ;
};
	public void mouseExited(NSEvent theEvent) { return ;
};
	public void keyDown(NSEvent theEvent) { return ;
};
	public void keyUp(NSEvent theEvent) { return ;
};
	public void flagsChanged(NSEvent theEvent) { return ;
};
	public void magnifyWithEvent(NSEvent event) { return ;
};
	public void rotateWithEvent(NSEvent event) { return ;
};
	public void swipeWithEvent(NSEvent event) { return ;
};
	public void beginGestureWithEvent(NSEvent event) { return ;
};
	public void endGestureWithEvent(NSEvent event) { return ;
};
	public void touchesBeganWithEvent(NSEvent event) { return ;
};
	public void touchesMovedWithEvent(NSEvent event) { return ;
};
	public void touchesEndedWithEvent(NSEvent event) { return ;
};
	public void touchesCancelledWithEvent(NSEvent event) { return ;
};
	public void noResponderFor(SEL eventSelector) { return ;
};
	public Boolean acceptsFirstResponder() { return null;
};
	public Boolean becomeFirstResponder() { return null;
};
	public Boolean resignFirstResponder() { return null;
};
	public void interpretKeyEvents(NSArray eventArray) { return ;
};
	public void flushBufferedKeyEvents() { return ;
};
	public void setMenu(NSMenu menu) { return ;
};
	public NSMenu menu() { return null;
};
	public void showContextHelp(NSObject sender) { return ;
};
	public void helpRequested(NSEvent eventPtr) { return ;
};
	public Boolean performMnemonic(String theString) { return null;
};
	public void insertText(NSObject insertString) { return ;
};
	public void doCommandBySelector(SEL aSelector) { return ;
};
	public void moveForward(NSObject sender) { return ;
};
	public void moveRight(NSObject sender) { return ;
};
	public void moveBackward(NSObject sender) { return ;
};
	public void moveLeft(NSObject sender) { return ;
};
	public void moveUp(NSObject sender) { return ;
};
	public void moveDown(NSObject sender) { return ;
};
	public void moveWordForward(NSObject sender) { return ;
};
	public void moveWordBackward(NSObject sender) { return ;
};
	public void moveToBeginningOfLine(NSObject sender) { return ;
};
	public void moveToEndOfLine(NSObject sender) { return ;
};
	public void moveToBeginningOfParagraph(NSObject sender) { return ;
};
	public void moveToEndOfParagraph(NSObject sender) { return ;
};
	public void moveToEndOfDocument(NSObject sender) { return ;
};
	public void moveToBeginningOfDocument(NSObject sender) { return ;
};
	public void pageDown(NSObject sender) { return ;
};
	public void pageUp(NSObject sender) { return ;
};
	public void centerSelectionInVisibleArea(NSObject sender) { return ;
};
	public void moveBackwardAndModifySelection(NSObject sender) { return ;
};
	public void moveForwardAndModifySelection(NSObject sender) { return ;
};
	public void moveWordForwardAndModifySelection(NSObject sender) { return ;
};
	public void moveWordBackwardAndModifySelection(NSObject sender) { return ;
};
	public void moveUpAndModifySelection(NSObject sender) { return ;
};
	public void moveDownAndModifySelection(NSObject sender) { return ;
};
	public void moveToBeginningOfLineAndModifySelection(NSObject sender) { return ;
};
	public void moveToEndOfLineAndModifySelection(NSObject sender) { return ;
};
	public void moveToBeginningOfParagraphAndModifySelection(NSObject sender) { return ;
};
	public void moveToEndOfParagraphAndModifySelection(NSObject sender) { return ;
};
	public void moveToEndOfDocumentAndModifySelection(NSObject sender) { return ;
};
	public void moveToBeginningOfDocumentAndModifySelection(NSObject sender) { return ;
};
	public void pageDownAndModifySelection(NSObject sender) { return ;
};
	public void pageUpAndModifySelection(NSObject sender) { return ;
};
	public void moveParagraphForwardAndModifySelection(NSObject sender) { return ;
};
	public void moveParagraphBackwardAndModifySelection(NSObject sender) { return ;
};
	public void scrollPageUp(NSObject sender) { return ;
};
	public void scrollPageDown(NSObject sender) { return ;
};
	public void scrollLineUp(NSObject sender) { return ;
};
	public void scrollLineDown(NSObject sender) { return ;
};
	public void scrollToBeginningOfDocument(NSObject sender) { return ;
};
	public void scrollToEndOfDocument(NSObject sender) { return ;
};
	public void transpose(NSObject sender) { return ;
};
	public void transposeWords(NSObject sender) { return ;
};
	public void selectAll(NSObject sender) { return ;
};
	public void selectParagraph(NSObject sender) { return ;
};
	public void selectLine(NSObject sender) { return ;
};
	public void selectWord(NSObject sender) { return ;
};
	public void indent(NSObject sender) { return ;
};
	public void insertTab(NSObject sender) { return ;
};
	public void insertBacktab(NSObject sender) { return ;
};
	public void insertNewline(NSObject sender) { return ;
};
	public void insertParagraphSeparator(NSObject sender) { return ;
};
	public void insertNewlineIgnoringFieldEditor(NSObject sender) { return ;
};
	public void insertTabIgnoringFieldEditor(NSObject sender) { return ;
};
	public void changeCaseOfLetter(NSObject sender) { return ;
};
	public void uppercaseWord(NSObject sender) { return ;
};
	public void lowercaseWord(NSObject sender) { return ;
};
	public void capitalizeWord(NSObject sender) { return ;
};
	public void deleteForward(NSObject sender) { return ;
};
	public void deleteBackward(NSObject sender) { return ;
};
	public void deleteWordForward(NSObject sender) { return ;
};
	public void deleteWordBackward(NSObject sender) { return ;
};
	public void deleteToBeginningOfLine(NSObject sender) { return ;
};
	public void deleteToEndOfLine(NSObject sender) { return ;
};
	public void deleteToBeginningOfParagraph(NSObject sender) { return ;
};
	public void deleteToEndOfParagraph(NSObject sender) { return ;
};
	public void yank(NSObject sender) { return ;
};
	public void complete(NSObject sender) { return ;
};
	public void setMark(NSObject sender) { return ;
};
	public void deleteToMark(NSObject sender) { return ;
};
	public void selectToMark(NSObject sender) { return ;
};
	public void swapWithMark(NSObject sender) { return ;
};
	public NSUndoManager undoManager() { return null;
};
}
